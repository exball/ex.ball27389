name: ‚õÖ CF Worker
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'wrangler env to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod
        - one
      commit:
        description: 'git tip commit to deploy'
        default: 'main'
        required: true

  push:
    # TODO: inputs.environment and inputs.commit
    branches:
      - "main"
    tags:
      - "v*"
    paths:
      - "_worker.js"
      - "wrangler.toml"
  repository_dispatch:

env:
  GIT_REF: ${{ github.event.inputs.commit || github.ref }}
  # default is 'dev' which is really empty/no env
  WORKERS_ENV: ''

jobs:
  deploy:
    name: üöÄ Deploy worker
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
        with:
          ref: ${{ env.GIT_REF }}
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: üõ∏ Env?
        # 'dev' env deploys to default WORKERS_ENV, which is, '' (an empty string)
        if: github.event.inputs.environment == 'prod' || github.event.inputs.environment == 'one'
        run: |
          echo "WORKERS_ENV=${WENV}" >> $GITHUB_ENV
          echo "COMMIT_SHA=${COMMIT_SHA}" >> $GITHUB_ENV
        shell: bash
        env:
          WENV: ${{ github.event.inputs.environment }}
          COMMIT_SHA: ${{ github.sha }}

      - name: üé± Tag?
        # docs.github.com/en/actions/learn-github-actions/contexts#github-context
        if: github.ref_type == 'tag'
        run: |
          echo "WORKERS_ENV=${WENV}" >> $GITHUB_ENV
          echo "COMMIT_SHA=${COMMIT_SHA}" >> $GITHUB_ENV
        shell: bash
        env:
          # tagged deploys always deploy to prod
          WENV: 'prod'
          COMMIT_SHA: ${{ github.sha }}

        # Install dependencies using Node.js 20
      - name: üèó Get dependencies
        run: npm i

      - name: üìö Install and Run Wrangler
        run: |
          npm install -g wrangler
          wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          WORKERS_ENV: ${{ env.WORKERS_ENV }}
          GIT_COMMIT_ID: ${{ env.GIT_REF }}

      - name: üé§ Notice
        run: |
          echo "::notice::Deployed to ${WORKERS_ENV} / ${GIT_REF} @ ${COMMIT_SHA}"
